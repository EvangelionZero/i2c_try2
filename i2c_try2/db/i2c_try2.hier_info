|i2c_try2
clk => sda_buf.CLK
clk => scl~reg0.CLK
clk => back_from_ack~reg0.CLK
clk => cfged_flag.CLK
clk => over_flag.CLK
clk => link.CLK
clk => machine_state.CLK
clk => seq_cnt[0].CLK
clk => seq_cnt[1].CLK
clk => button_cnt[0].CLK
clk => button_cnt[1].CLK
clk => button_cnt[2].CLK
clk => button_cnt[3].CLK
clk => button_cnt[4].CLK
clk => button_cnt[5].CLK
clk => button_cnt[6].CLK
clk => button_cnt[7].CLK
clk => button_cnt[8].CLK
clk => button_cnt[9].CLK
clk => en_wr_cnt[0].CLK
clk => en_wr_cnt[1].CLK
clk => en_wr_cnt[2].CLK
clk => en_wr_cnt[3].CLK
clk => en_wr_cnt[4].CLK
clk => en_wr_cnt[5].CLK
clk => en_wr_cnt[6].CLK
clk => en_wr_cnt[7].CLK
clk => en_wr_cnt[8].CLK
clk => en_wr.CLK
clk => i2c_state.IN1
clk => i2c_substate.IN1
clk => bit_cycle_cnt.IN1
rst => i2c_state.data_to_port.OUTPUTSELECT
rst => i2c_state.command.OUTPUTSELECT
rst => i2c_state.t_slave_addr.OUTPUTSELECT
rst => i2c_substate.stop.OUTPUTSELECT
rst => i2c_substate.ack.OUTPUTSELECT
rst => i2c_substate.eighth.OUTPUTSELECT
rst => i2c_substate.seventh.OUTPUTSELECT
rst => i2c_substate.sixth.OUTPUTSELECT
rst => i2c_substate.fifth.OUTPUTSELECT
rst => i2c_substate.fourth.OUTPUTSELECT
rst => i2c_substate.third.OUTPUTSELECT
rst => i2c_substate.second.OUTPUTSELECT
rst => i2c_substate.first.OUTPUTSELECT
rst => i2c_substate.start.OUTPUTSELECT
rst => bit_cycle_cnt.four.OUTPUTSELECT
rst => bit_cycle_cnt.three.OUTPUTSELECT
rst => bit_cycle_cnt.two.OUTPUTSELECT
rst => bit_cycle_cnt.one.OUTPUTSELECT
rst => sda_buf.OUTPUTSELECT
rst => scl.OUTPUTSELECT
rst => back_from_ack~reg0.ACLR
rst => cfged_flag.ACLR
rst => over_flag.ACLR
rst => link.ACLR
rst => machine_state.ACLR
rst => seq_cnt[0].ACLR
rst => seq_cnt[1].ACLR
rst => button_cnt[0].ACLR
rst => button_cnt[1].ACLR
rst => button_cnt[2].ACLR
rst => button_cnt[3].ACLR
rst => button_cnt[4].ACLR
rst => button_cnt[5].ACLR
rst => button_cnt[6].ACLR
rst => button_cnt[7].ACLR
rst => button_cnt[8].ACLR
rst => button_cnt[9].ACLR
rst => en_wr_cnt[0].ACLR
rst => en_wr_cnt[1].ACLR
rst => en_wr_cnt[2].ACLR
rst => en_wr_cnt[3].ACLR
rst => en_wr_cnt[4].ACLR
rst => en_wr_cnt[5].ACLR
rst => en_wr_cnt[6].ACLR
rst => en_wr_cnt[7].ACLR
rst => en_wr_cnt[8].ACLR
rst => en_wr.ACLR
en => always1.IN1
button => button_cnt.OUTPUTSELECT
button => button_cnt.OUTPUTSELECT
button => button_cnt.OUTPUTSELECT
button => button_cnt.OUTPUTSELECT
button => button_cnt.OUTPUTSELECT
button => button_cnt.OUTPUTSELECT
button => button_cnt.OUTPUTSELECT
button => button_cnt.OUTPUTSELECT
button => button_cnt.OUTPUTSELECT
button => button_cnt.OUTPUTSELECT
scl <= scl~reg0.DB_MAX_OUTPUT_PORT_TYPE
led[0] <= led.DB_MAX_OUTPUT_PORT_TYPE
led[1] <= led.DB_MAX_OUTPUT_PORT_TYPE
led[2] <= led.DB_MAX_OUTPUT_PORT_TYPE
sda <> sda
back_from_ack <= back_from_ack~reg0.DB_MAX_OUTPUT_PORT_TYPE


